/**
 * Build classes
 *
 * @requires $classes
 */
@mixin make-classes($classes) {
  @each $class, $props in $classes {
    // multi list
    @if (type-of(nth($props, 1)) == list) {
      .#{$class} {
        @each $prop in $props {
          #{nth($prop, 1)}: nth($prop, 2);
        }
      }
    }
    // single list
    @else {
      .#{$class} {
        #{nth($props, 1)}: nth($props, 2);
      }
    }
  }
}

/**
 * Build classes with mq prefix
 *
 * @requires $breakpoints, $classes
 */
@mixin make-classes-mq($classes) {
  @include make-classes($classes);

  @each $bp in map-keys($breakpoints) {
    @include mq($bp) {
      @each $class, $props in $classes {
        // multi list
        @if (type-of(nth($props, 1)) == list) {
          .#{$bp}\\:#{$class} {
            @each $prop in $props {
              #{nth($prop, 1)}: nth($prop, 2);
            }
          }
        }
        // single list
        @else {
          .#{$bp}\\:#{$class} {
            #{nth($props, 1)}: nth($props, 2);
          }
        }
      }
    }
  }
}
